<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Socket.io Chat Example</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
</head>

<body>
    <div class="container">
        <h3>Waiting ROOM</h3>
        <form class="form-inline">
            <div class="form-group">
                <label for="msgForm">Message: </label>
                <input type="text" class="form-control" id="msgForm">
            </div>
            <button type="submit" class="btn btn-primary">Send</button>
        </form>
        <div id="chatLogs"></div>
        <button id="update">update</button>
        <button id="exit" onclick="location.href='/game'">exit</button>
        <div id="userList" style="background-color: cornflowerblue;">
            <h4>user list</h4>
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        $(function () {
            // socket.io 서버에 접속한다
            var socket = io();

            // 서버로 자신의 정보를 전송한다.
            socket.emit('login', {
                // name: "ungmo2",
                name: makeRandomName(),
                userid: "ungmo2@gmail.com"
            });

            $('button#update').click(function (e) {
                e.preventDefault();
                socket.emit('update');
            });



            socket.on('update', function (data) {
                const d = JSON.parse(data);
                $('#userList').remove();
                for (let i = 0; i < d.list.length; i++) {
                    const li = d.list[i];
                    $('#userList').append('<p>' + li + '</p>');
                }
            });


            // 서버로부터의 메시지가 수신되면
            socket.on("login", function (data) {
                $("#chatLogs").append("<div><strong>" + data.name + "</strong> has joined</div>");
                for (var i = 0; i < data.list.length; i++) {
                    $("#userList").append('<p>' + data.list[i] + '</p>');
                }
            });

            // 서버로부터의 메시지가 수신되면
            socket.on("s2c chat", function (data) {
                $("#chatLogs").append("<div>" + data.from.name + " : " + data.msg + "</strong></div>");
            });

            // Send 버튼이 클릭되면
            $("form").submit(function (e) {
                e.preventDefault();
                var $msgForm = $("#msgForm");

                // 서버로 메시지를 전송한다.
                socket.emit("chat", { msg: $msgForm.val() });
                $msgForm.val("");
            });

            $("#exit").click(function (e) {
                e.preventDefault();
                socket.emit('disconnect');
            })

            function makeRandomName() {
                var name = "";
                var possible = "abcdefghijklmnopqrstuvwxyz";
                for (var i = 0; i < 3; i++) {
                    name += possible.charAt(Math.floor(Math.random() * possible.length));
                }
                return name;
            }
        });
    </script>
</body>

</html>